{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\pardobrewbros_react\\\\pardobrewbros\\\\src\\\\components\\\\ItemList\\\\ItemDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ItemCount from \"./ItemCount\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemDetail = _ref => {\n  _s();\n\n  let {\n    beer\n  } = _ref;\n  const idNumber = beer.idNumber;\n  let [count, setCount] = useState(1);\n  let [stock, setStock] = useState(idNumber);\n  let [remaingStock, setRemainingStock] = useState(idNumber - 0);\n\n  const countIncrement = () => {\n    if (count < stock) {\n      setCount(++count);\n      setRemainingStock(--remaingStock);\n    }\n  };\n\n  const countDecrement = () => {\n    if (count > 1) {\n      setCount(--count);\n      setRemainingStock(++remaingStock);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: beer.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: beer.detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: beer.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemCount, {\n      remaingStock: remaingStock,\n      initial: count,\n      stock: idNumber,\n      countIncrement: countIncrement,\n      countDecrement: countDecrement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"confirmar compra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ItemDetail, \"uIWKpQ1IqO+5ltQVns6a9TDlmjM=\");\n\n_c = ItemDetail;\nexport default ItemDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"sources":["D:/www/pardobrewbros_react/pardobrewbros/src/components/ItemList/ItemDetail.js"],"names":["React","useState","ItemCount","ItemDetail","beer","idNumber","count","setCount","stock","setStock","remaingStock","setRemainingStock","countIncrement","countDecrement","name","detail","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,UAAU,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC/B,QAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAtB;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAhC;AACA,MAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,QAAD,CAAhC;AACA,MAAI,CAACK,YAAD,EAAeC,iBAAf,IAAoCV,QAAQ,CAACI,QAAQ,GAAG,CAAZ,CAAhD;;AAEA,QAAMO,cAAc,GAAG,MAAM;AAC3B,QAAIN,KAAK,GAAGE,KAAZ,EAAmB;AACjBD,MAAAA,QAAQ,CAAC,EAAED,KAAH,CAAR;AACAK,MAAAA,iBAAiB,CAAC,EAAED,YAAH,CAAjB;AACD;AACF,GALD;;AAMA,QAAMG,cAAc,GAAG,MAAM;AAC3B,QAAIP,KAAK,GAAG,CAAZ,EAAe;AACbC,MAAAA,QAAQ,CAAC,EAAED,KAAH,CAAR;AACAK,MAAAA,iBAAiB,CAAC,EAAED,YAAH,CAAjB;AACD;AACF,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA,gBAAKN,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIV,IAAI,CAACW;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIX,IAAI,CAACY;AAAT;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,SAAD;AACE,MAAA,YAAY,EAAEN,YADhB;AAEE,MAAA,OAAO,EAAEJ,KAFX;AAGE,MAAA,KAAK,EAAED,QAHT;AAIE,MAAA,cAAc,EAAEO,cAJlB;AAKE,MAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD,CAlCD;;GAAMV,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ItemCount from \"./ItemCount\";\r\n\r\nconst ItemDetail = ({ beer }) => {\r\n  const idNumber = beer.idNumber;\r\n  let [count, setCount] = useState(1);\r\n  let [stock, setStock] = useState(idNumber);\r\n  let [remaingStock, setRemainingStock] = useState(idNumber - 0);\r\n\r\n  const countIncrement = () => {\r\n    if (count < stock) {\r\n      setCount(++count);\r\n      setRemainingStock(--remaingStock);\r\n    }\r\n  };\r\n  const countDecrement = () => {\r\n    if (count > 1) {\r\n      setCount(--count);\r\n      setRemainingStock(++remaingStock);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>{beer.name}</h2>\r\n      <p>{beer.detail}</p>\r\n      <p>{beer.price}</p>\r\n      <ItemCount\r\n        remaingStock={remaingStock}\r\n        initial={count}\r\n        stock={idNumber}\r\n        countIncrement={countIncrement}\r\n        countDecrement={countDecrement}\r\n      />\r\n      <button>confirmar compra</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemDetail;\r\n"]},"metadata":{},"sourceType":"module"}